#!/usr/bin/env python3
# ==========================================================================
# @file    people-manager
# @brief   Add users and roles for Acacia
# @created 2021-01-25
# @license Please see the file named LICENSE in the project directory
# @website https://github.com/caltechlibrary/acacia
# ==========================================================================

import sys
import os

from decouple import config
from acacia.persons import PersonManager

repo_id = config('REPO_ID', 'caltechauthors')

def usage(app_name, exit_code):
    print(f'''
USAGE: {app_name} VERB [KEY_VALUE_PAIRS]

{app_name} lets us review the contents of {repo_id}
supporting the acacia web service.

VERBS

Verbs are actions you can perform on a peron's account or
to show the version of the program or this help page.

    help       this help page.
    version    version of software

    list       list users defined in {repo_id}

Each account (person) has several fields associated with it.

    uname          their login name like "ml@example.edu"
    display_name   their human readable name, "Maxine L."
    email          the email address to use with Acacia (may be
                   different from what Shibboleth provides)
    role           their application role, e.g. "library", "patron"

Setting a field is expressed with a key/value pair separate by
an equal sign (i.e. '='). There is no space between the key, the equal
sign and the value (which can be in quotes). If no value is provided
then you will be prompted to enter it. Pressing enter without setting
the value will clear any existing value in the field.

All verbs to manager accounts are add, update, remove and list.
Adding an account creates a new record in {repo_id}. Updates
changes the values of fields in an existing account. Only the
fields specified get changed.  Remove deletes an account from
{repo_id} and list lists all accounts. List will also list a
specific account if you provide the value for the field "uname".

EXAMPLES

List an account "rsdoiel".

   {app_name} list uname=rsdoiel 

List all the accounts.

   {app_name} list

''')
    sys.exit(exit_code)

if __name__ == '__main__':
    app_name = os.path.basename(sys.argv[0])
    if len(sys.argv) < 2:
        usage(app_name, 1)
    verb = sys.argv[1]    
    kv = {}
    for term in sys.argv[2:]:
        if "=" in term:
            parts = term.split("=", 2);
            key = parts[0].strip()
            value = parts[1].strip().strip("'").strip('"')
            if key:
                if (not value) and not (key == 'secret'):
                    value = input(f'''Enter {key}: ''')
                kv[key] = value
    pm = PersonManager()
    if verb == 'list':
        pm.list_people(kv)
    elif verb in [ 'h', 'help', '-h', '--help', '-help']:
        usage(app_name, 0)
    else:
        print(f'''ERROR: "{verb}" not understood''')
        sys.exit(1)
            


